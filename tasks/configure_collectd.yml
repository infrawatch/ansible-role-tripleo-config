---
- name: Create initial plugins list
  set_fact:
    collectd_plugins: "{{ (tripleo_collectd_default_plugins + tripleo_collectd_extra_plugins) | unique }}"

- name: Set interval
  set_fact:
    collectd_interval: "{{ tripleo_collectd_default_polling_interval }}"

- name: Set up conditionals
  set_fact:
    amqp_connection: "{{ (tripleo_collectd_connection_type == 'amqp1')|default(false) }}"
    amqp_default_connection: "{{ (tripleo_collectd_amqp_host == 'nil')|default(false) }}"
    amqp_default_interval: "{{ (tripleo_collectd_amqp_interval|int == -666)|default(false) }}"
    collectd_connection: "{{ (tripleo_collectd_connection_type == 'network')|default(false) }}"
    sensubility_needs_sudo: "{{ (tripleo_collectd_sensubility_exec_sudo_rule != 'nil' )| default(false) }}"

- debug:
    var: "{{ item }}"
  with_items:
    - amqp_connection
    - amqp_default_connection
    - amqp_default_interval
    - collectd_connection
    - sensubility_needs_sudo
    - tripleo_collectd_extra_plugins

- debug:
     var: collectd_connection

- name: "Update plugin list"
  set_fact:
    collectd_plugins: "{{ (collectd_plugins + 'cpu df load connectivity intel_rdt ipmi procevent'.split() ) | unique }}"
  when: tripleo_collectd_enable_stf|bool

- debug:
    var: collectd_plugins

- name: "Update plugins list so logfile will be enabled"
  set_fact:
    collectd_plugins: "{{ ( collectd_plugins + ['logfile'] ) }}"

- name: Set up amqp connection to collectd
  when: amqp_connection
  block:
    - name: "Add amqp1 to the list of plugins to enable"
      set_fact:
        collectd_plugins: "{{ ( collectd_plugins + ['amqp1']) | unique }}"
    - name: "Configure transport, address, instances and retry_delay for amqp1"
      set_fact:
        collectd_plugin_amqp1_transport: "{{ tripleo_collectd_amqp_transport_name }}"
        collectd_plugin_amqp1_address: "{{ tripleo_collectd_amqp_address }}"
        collectd_plugin_amqp1_instances: "{{ tripleo_collectd_amqp_instances }}"
        collectd_plugin_amqp1_retry_delay: "{{ tripleo_collectd_amqp_retry_delay }}"

    - name: "Set the interval for the amqp1 plugin"
      when: "{{ not amqp_default_interval }}"
      set_fact:
        collectd_plugin_amqp1_interval: "{{ tripleo_collectd_amqp_interval }}"

    - name: "Set amqp send_queue_limit"
      when: "{{ tripleo_collectd_amqp_send_queue_limit != -1 }}"
      set_fact:
         collectd_plugin_amqp1_send_queue_limit: "{{ tripleo_collectd_amqp_send_queue_limit }}"

    - name: "Use the default values for the AMQP connection"
      when: "{{ amqp_default_connection }}"
      set_fact:
        collectd_plugin_amqp1_host: "{{ lookup('vars', service_net_map[(tripleo_role_name + 'MetricsQdrNetwork') | snake_case] + '_ip' ) }}"
        collectd_plugin_amqp1_port: "{{ metrics_qdr_port }}"
        collectd_plugin_amqp1_user: "{{ metrics_qdr_username }}"
        collectd_plugin_amqp1_password: "{{ metrics_qdr_password }}"

    - name: "Set up user-defined amqp connection"
      when: "{{ not amqp_default_connection }}"
      set_fact:
        collectd_plugin_amqp1_host: "{{ tripleo_collectd_amqp_host }}"
        collectd_plugin_amqp1_port: "{{ tripleo_collectd_amqp_port  }}"
        collectd_plugin_amqp1_user: "{{ tripleo_collectd_amqp_user }}"
        collectd_plugin_amqp1_password: "{{ tripleo_collectd_amqp_password }}"

- name: Set up collectd connection to external collectd instance
  when: collectd_connection
  block:
    - name: "Add network to the list of plugins to enable"
      set_fact:
        collectd_plugins: "{{ collectd_plugins + ['network'] | unique }}"

    - debug:
        msg: "Collectd plugin list has been updated, the following plugins will be enabled: {{ collectd_plugins }}"

    - name: "Create the collectd network config."
      when: tripleo_collectd_server | length != 0
      block:
        - name: "Populate the initial config for network server."
          set_fact:
            collectd_plugin_network_server:
              name: "{{ tripleo_collectd_server }}"
              port: "{{ tripleo_collectd_server_port | default(omit) }}"
              username: "{{ tripleo_collectd_username | default(omit) }}"
              password: "{{ tripleo_collectd_password | default(omit) }}"
              securitylevel: "{{ tripleo_collectd_security_level }}"

        - name: "Show the (initial) network server config (may contain empty values which need to be removed)."
          debug:
            var: collectd_plugin_network_server

        - name: "Filter out the empty string values from the network server config"
          set_fact:
            collectd_plugin_network_server:
              - '{{ collectd_plugin_network_server | dict2items | rejectattr("value", "equalto", "") | list | items2dict }}'

        - name: "Show the updated network server config, which has empty values removed."
          debug:
            var: collectd_plugin_network_server

- name: Enable sqlalchemy
  # TODO: check does the puppet tripleo::...::collectd::enable_sqlalchemy role
  # do anything besides set up the config
  # https://github.com/openstack/puppet-tripleo/blob/master/manifests/profile/base/metrics/collectd/sqlalchemy_collectd.pp
  when: tripleo_collectd_enable_sqlalchemy
  set_fact:
    collectd_plugin_python_module_import: "{{ collectd_plugin_python_module_import | default([]) + ['sqlalchemy_collectd.server.plugin'] }}"
    collectd_plugin_python_module: "{{ collectd_plugin_python_module + { 'sqlalchemy': { 'config': { 'listen': ['sqlalchemy_bind_host', sqlalchemy_bind_port], 'loglevel': sqlalchemy_log_messages } } } }}"

# Do I need to break these into separate support tasks?
- name: "Configure collectd to run collectd-sensubility via collectd-exec"
  set_fact:
    todo: true
  when: tripleo_collectd_enable_sensubility

- name: "Generate the collectd config files"
  include_role:
    name: collectd_config

- name: "Update include dir for configs"
  lineinfile:
    path: "{{ collectd_conf_output_dir }}/../collectd.conf"
    regexp: "^(.*){{ collectd_conf_output_dir }}(.*)$"
    line: '\1/etc/collectd.d/\2'
    backrefs: true
